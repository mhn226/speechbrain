# ############################################################################
# Model: E2E ST with wav2vec 2.0 encoder
# Encoder: wav2vec 2.0 + linear projection
# Decoder: Transformer
# Tokens: unigram (1000)
# losses: NLL
# Training: Tamasheq-French corpus
# Author:  Marcely Zanon Boito, 2022
# ############################################################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 7777
__set_seed: !!python/object/apply:torch.manual_seed [!ref <seed>]
debug: False
output_folder: !ref output_taq_samu/<seed>
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt
wer_file: !ref <output_folder>/wer.txt


# Data files
data_folder: /gpfsscratch/rech/nsm/ueb56uf/corpora/IWSLT2022_Tamasheq_data/taq_fra_clean/json_version/
tokenizer_file: /gpfsscratch/rech/nsm/ueb56uf/corpora/IWSLT2022_Tamasheq_data/taq_fra_clean/train/spm_unigram1000.model
#tokenizer_file: mbart-large-50/sentencepiece.bpe.model 
#tokenizer_file: mbart-large-50-many-to-many-mmt/sentencepiece.bpe.model
wav2vec2_path: SAMU-XLSR #wav2vec2-xls-r-300m 
lang: "fr" #for the BLEU score detokenization
target_lang: "fr_XX" # for mbart initialization
sample_rate: 16000

# Load pretrained the tokenizer
tokenizer: !new:sentencepiece.SentencePieceProcessor
#pretrainer: !new:speechbrain.utils.parameter_transfer.Pretrainer
#    collect_in: ./tokenizer
#    loadables:
#        tokenizer: !ref <tokenizer>
#    paths:
#        tokenizer: !ref <tokenizer_file>

# URL for the HuggingFace model we want to load (BASE here)
wav2vec2_hub: SAMU-XLSR #wav2vec2-xls-r-300m


# wav2vec 2.0 specific parameters
wav2vec2_frozen: False
keep_n_layers: 6 # keep first N layers from the Transformer Encoder stack inside the wav2vec 2.0 model

# Training parameters
number_of_epochs: 100
lr: 0.001
lr_wav2vec: 0.00001
lr_labse: 0.00001
lr_mbart: 0.00001
sorting: ascending
batch_size: 4 #4
test_batch_size: 1 #4
loss_reduction: batchmean
ckpt_interval_minutes: 15 # save checkpoint every N min

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>

dataloader_options:
    batch_size: !ref <batch_size>
    num_workers: 4

test_dataloader_options:
    batch_size: !ref <test_batch_size>
    num_workers: 4

# Feature parameters (W2V2 etc)
features_dim: 768 #base wav2vec output dimension

#projection for w2v
enc_dnn_layers: 1
enc_dnn_neurons: 1024 #256

# Transformer
embedding_size: 256
d_model: 1024  #256
output_neurons:  250000
activation: !name:torch.nn.GELU

# Outputs
blank_index: 0
label_smoothing: 0.1
pad_index: 1      # pad_index defined by mbart model
bos_index: 250008 # fr_XX bos_index defined by mbart model
eos_index: 2

# Decoding parameters
# Be sure that the bos and eos index match with the BPEs ones
min_decode_ratio: 0.0
max_decode_ratio: 1.0
valid_beam_size: 5
test_beam_size: 5

############################## models ################################
#wav2vec model
wav2vec2: !new:speechbrain.lobes.models.fairseq_samu.FairseqSAMU
    pretrained_path: !ref <wav2vec2_hub>/checkpoint_51_234000.pt
    output_norm: True
    freeze: !ref <wav2vec2_frozen>
    save_path: !ref <save_folder>/wav2vec2_checkpoint


#linear projection
enc: !new:speechbrain.lobes.models.VanillaNN.VanillaNN
    input_shape: [null, null, 1024] #!ref <features_dim>]
    activation: !ref <activation>
    dnn_blocks: !ref <enc_dnn_layers>
    dnn_neurons: !ref <enc_dnn_neurons>

labse_path: LaBSE 
labse_frozen: True
LaBSE: !new:speechbrain.lobes.models.huggingface_labse.HuggingFaceLaBSE
    source: !ref <labse_path>
    freeze: !ref <labse_frozen>
    save_path: !ref <save_folder>/labse_checkpoint

#mBART
mbart_path: mbart-large-50-many-to-many-mmt
mbart_frozen: False
mBART: !new:speechbrain.lobes.models.huggingface_mbart.HuggingFaceMBART
    #input_size: !ref <embedding_size>
    #tgt_vocab: !ref <output_neurons>
    source: !ref <mbart_path>
    #output_norm: False
    freeze: !ref <mbart_frozen>
    save_path: !ref <save_folder>/mbart_checkpoint
    target_lang: !ref <target_lang>

log_softmax: !new:speechbrain.nnet.activations.Softmax
    apply_log: True

seq_lin: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <d_model>
    n_neurons: !ref <output_neurons>


adapter: !new:speechbrain.lobes.models.Adapters.SerialAdapter
    #input_size: 256
    n_neurons: 1024
    input_dim: 1024
    bottleneck_dim: 4096

length_adapter: !new:speechbrain.lobes.models.Adapters.LengthAdapter
    n_neurons: 1024
    input_dim: 1024
    n_layers: 3
    kernel_size: 3
    stride: 2
    norm: False #True
    

modules:
    wav2vec2: !ref <wav2vec2>
    enc: !ref <enc>
    mBART: !ref <mBART>
    adapter: !ref <adapter>
    length_adapter: !ref <length_adapter>

model: !new:torch.nn.ModuleList
    - [!ref <enc>, !ref <adapter>, !ref <length_adapter>]

adam_opt_class: !name:torch.optim.Adam
    lr: !ref <lr>

wav2vec_opt_class: !name:torch.optim.Adam
    lr: !ref <lr_wav2vec>

labse_opt_class: !name:torch.optim.Adam
    lr: !ref <lr_labse>

mbart_opt_class: !name:torch.optim.Adam
    lr: !ref <lr_mbart>

seq_cost: !name:speechbrain.nnet.losses.nll_loss
    label_smoothing: !ref <label_smoothing>
    reduction: !ref <loss_reduction>

#cosine_loss: !name:torch.nn.CosineSimilarity

lr_annealing_adam: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr>
    improvement_threshold: 0.0025
    annealing_factor: 0.5
    patient: 2

lr_annealing_wav2vec: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr_wav2vec>
    improvement_threshold: 0.0025
    annealing_factor: 0.9

lr_annealing_labse: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr_labse>
    improvement_threshold: 0.0025
    annealing_factor: 0.9

lr_annealing_mbart: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr_mbart>
    improvement_threshold: 0.0025
    annealing_factor: 0.9

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        model: !ref <model>
        wav2vec2: !ref <wav2vec2>
        #LaBSE: !ref <LaBSE>
        mBART: !ref <mBART>
        lr_annealing_adam: !ref <lr_annealing_adam>
        lr_annealing_wav2vec: !ref <lr_annealing_wav2vec>
        #lr_annealing_labse: !ref <lr_annealing_labse>
        lr_annealing_mbart: !ref <lr_annealing_mbart>
        counter: !ref <epoch_counter>

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>

valid_search: !new:speechbrain.decoders.S2STransformerBeamSearch
    modules: [!ref <mBART>, !ref <seq_lin>, null]
    bos_index: !ref <bos_index>
    eos_index: !ref <eos_index>
    blank_index: !ref <blank_index>
    min_decode_ratio: !ref <min_decode_ratio>
    max_decode_ratio: !ref <max_decode_ratio>
    beam_size: !ref <valid_beam_size>
    using_eos_threshold: False
    length_normalization: False

test_search: !new:speechbrain.decoders.S2STransformerBeamSearch
    modules: [!ref <mBART>, !ref <seq_lin>, null]
    bos_index: !ref <bos_index>
    eos_index: !ref <eos_index>
    blank_index: !ref <blank_index>
    min_decode_ratio: !ref <min_decode_ratio>
    max_decode_ratio: !ref <max_decode_ratio>
    beam_size: !ref <test_beam_size>
    using_eos_threshold: True
    length_normalization: True

bleu_computer: !name:speechbrain.utils.bleu.BLEUStats
    merge_words: False
    lang: !ref <lang>

acc_computer: !name:speechbrain.utils.Accuracy.AccuracyStats


pretrainer: !new:speechbrain.utils.parameter_transfer.Pretrainer
    collect_in: !ref <save_folder>
#    loadables:
#        tokenizer: !ref <tokenizer>
#        wav2vec2: !ref <wav2vec2>
#        LaBSE: !ref <LaBSE>
#    paths:
#        tokenizer: !ref <tokenizer_file>
#        wav2vec2: !ref <wav2vec2_path>
#        LaBSE: !ref <labse_path>
